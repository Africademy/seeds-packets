import fs from 'fs';
import gulp from 'gulp';
import theo from 'theo';
import insert from 'gulp-insert';
import rename from 'gulp-rename';
import upperFirst from 'lodash.upperfirst';
import { suitCssName } from '../util/sassvar';
import { javascriptConst } from '../util/constantcase';

import getGulpTask from '../util/getgulptask';

const typographyTokensPath = 'packages/seeds-typography/tokens.yml';

const typographyFunction = `$Typography-unit: px !default;
$Typography-size--base: $Typography-size--400 !default;
@function Typography-getunit($size) {
  @if $Typography-unit == "rem" {
    $remSize: $size / $Typography-size--base;
    @return #{$remSize}rem;
  }
  @else {
    @return $size;
  }
}
`;

function getGulpTypographyTask(transform, format, opts = {}) {
  return getGulpTask('seeds-typography', transform, format, opts);
}

gulp.task('typography-scss', getGulpTypographyTask('web', 'scss', { appendFile: typographyFunction }));
gulp.task('typography-js', getGulpTypographyTask('js', 'common.js'));
gulp.task('typography-sketch', getGulpTypographyTask('sketch', 'sketchtext.json', {
  dest: 'docs/downloads',
  appendVersion: true
}));

gulp.task('typography-docs', () => {
  theo.plugins
    .file(typographyTokensPath)
    .pipe(theo.plugins.transform('web'))
    .pipe(theo.plugins.getResult((result) => {
      const tokens = JSON.parse(result);
      const sizeProps = tokens.propKeys.filter((key) => tokens.props[key].type === 'font size');
      const sizes = sizeProps.map((key) => {
        const prop = tokens.props[key];
        return {
          size: prop.value.value,
          app: upperFirst(prop.name),
          sass: `@include ${suitCssName(prop.package, prop.name)};`,
          javascript: `{ style: ${javascriptConst(prop.package, prop.name)} }`,
          lineHeightProportional: prop.value.rules['line-height'],
          lineHeightPx: prop.value.rules['line-height'] * parseInt(prop.value.value, 10)
        };
      })

      fs.writeFileSync('docs/_includes/typography.html', `<!-- GENERATED BY GULP - DO NOT EDIT -->\n\n<script>window.seedsTypography = ${JSON.stringify(sizes)};</script>`);
    }));
});

gulp.task('typography', [
  'typography-scss',
  'typography-js',
  'typography-sketch',
  'typography-docs'
]);
